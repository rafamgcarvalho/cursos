// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//     id "dev.flutter.flutter-gradle-plugin"
// }

// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file("local.properties")
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader("UTF-8") { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
// if (flutterVersionCode == null) {
//     flutterVersionCode = "1"
// }

// def flutterVersionName = localProperties.getProperty("flutter.versionName")
// if (flutterVersionName == null) {
//     flutterVersionName = "1.0"
// }

// // android {
// //     namespace = "com.marcas"
// //     // compileSdk = flutter.compileSdkVersion
// //     // ndkVersion = flutter.ndkVersion
// //     compileSdk = 34
// //     targetSdk = 34

// //     compileOptions {
// //         sourceCompatibility = JavaVersion.VERSION_1_8
// //         targetCompatibility = JavaVersion.VERSION_1_8
// //     }

// //     defaultConfig {
// //         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
// //         applicationId = "com.marcas"
// //         // You can update the following values to match your application needs.
// //         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
// //         minSdk = flutter.minSdkVersion
// //         targetSdk = flutter.targetSdkVersion
// //         versionCode = flutterVersionCode.toInteger()
// //         versionName = flutterVersionName
// //     }

// //     buildTypes {
// //         release {
// //             // TODO: Add your own signing config for the release build.
// //             // Signing with the debug keys for now, so `flutter run --release` works.
// //             signingConfig = signingConfigs.debug
// //         }
// //     }
// // }

// // flutter {
// //     source = "../.."
// // }


// android {
//     namespace = "com.marcas"
//     compileSdkVersion flutter.compileSdkVersion.toInteger() // Corrigido
//     ndkVersion = flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility = JavaVersion.VERSION_1_8
//         targetCompatibility = JavaVersion.VERSION_1_8
//     }

//     defaultConfig {
//         applicationId = "com.marcas"
//         minSdkVersion flutter.minSdkVersion.toInteger() // Corrigido
//         targetSdkVersion flutter.targetSdkVersion.toInteger() // Corrigido
//         versionCode = flutterVersionCode.toInteger()
//         versionName = flutterVersionName
//     }

//     buildTypes {
//         release {
//             signingConfig = signingConfigs.debug
//         }
//     }
// }



plugins {
    id "com.android.application"
    id "kotlin-android"
    // O Flutter Gradle Plugin deve ser aplicado após os plugins do Android e Kotlin.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1')
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0')

android {
    namespace "com.example.novoprojeto" // Altere para o namespace do seu novo projeto
    compileSdkVersion 34 // Forçando o SDK 34, já que o 35 não está instalado
    ndkVersion "25.2.9519653" // Versão compatível do NDK

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.novoprojeto" // Altere para o applicationId do seu novo projeto
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Certifique-se de configurar sua chave de assinatura aqui para produção
        }
    }
}

flutter {
    source '../..' // Verifique se o caminho para o Flutter está correto
}

dependencies {
    implementation "androidx.core:core-ktx:1.12.0" // Corrige compatibilidade com SDK 34
}